{
  "scopeName": "inline-template.vg",
  "injectionSelector": "L:meta.decorator.ts -comment -text.html",
  "patterns": [
    {
      "include": "#inlineTemplate"
    }
  ],
  "repository": {
    "inlineTemplate": {
      "begin": "(template)\\s*(:)",
      "beginCaptures": {
        "1": {
          "name": "meta.object-literal.key.ts"
        },
        "2": {
          "name": "meta.object-literal.key.ts punctuation.separator.key-value.ts"
        }
      },
      "end": "(?=,|})",
      "patterns": [
        {
          "include": "#vgTemplate"
        }
      ]
    },
    "tag-stuff": {
      "begin": "(<)",
      "end": "(?=/>)|(>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "name": "meta.tag-stuff",
      "patterns": [
        {
          "include": "#vue-directives"
        },
        {
          "include": "text.html.basic#attribute"
        }
      ]
    },
    "vue-directives": {
      "patterns": [
        {
          "include": "#vue-directives-control"
        },
        {
					"include": "#vue-directives-style-attr"
				},
        {
          "include": "#vue-directives-original"
        },
        {
					"include": "#vue-directives-generic-attr"
				}
      ]
    },
    "vue-directives-original": {
      "begin": "(?:\\b(v-)|(:)|(@)|(#))(\\[?)([\\w\\-]*)(\\]?)(?:\\.([\\w\\-]*))*",
      "beginCaptures": {
        "1": {
          "name": "entity.other.attribute-name.html"
        },
        "2": {
          "name": "punctuation.attribute-shorthand.bind.html"
        },
        "3": {
          "name": "punctuation.attribute-shorthand.event.html"
        },
        "4": {
          "name": "punctuation.attribute-shorthand.slot.html"
        },
        "5": {
          "name": "punctuation.separator.key-value.html"
        },
        "6": {
          "name": "entity.other.attribute-name.html"
        },
        "7": {
          "name": "punctuation.separator.key-value.html"
        },
        "8": {
          "name": "entity.other.attribute-name.html"
        },
        "9": {
          "name": "punctuation.separator.key-value.html"
        }
      },
      "end": "(?=\\s*+[^=\\s])",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.html"
        }
      },
      "name": "meta.attribute.directive",
      "patterns": [
        {
          "include": "#vue-directives-expression"
        }
      ]
    },
    "vue-directives-control": {
      "begin": "(v-for)|(v-if|v-else-if|v-else)",
      "captures": {
        "1": {
          "name": "keyword.control.loop"
        },
        "2": {
          "name": "keyword.control.conditional"
        }
      },
      "end": "(?=\\s*+[^=\\s])",
      "name": "meta.attribute.directive.control",
      "patterns": [
        {
          "include": "#vue-directives-expression"
        }
      ]
    },
    "vue-directives-expression": {
      "patterns": [
        {
          "begin": "(=)\\s*('|\"|`)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.separator.key-value.html"
            },
            "2": {
              "name": "punctuation.definition.string.begin.html"
            }
          },
          "end": "(\\2)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.html"
            }
          },
          "patterns": [
            {
              "begin": "(?<=('|\"|`))",
              "end": "(?=\\1)",
              "name": "source.ts.embedded.html",
              "patterns": [
                {
                  "include": "source.ts"
                }
              ]
            }
          ]
        },
        {
          "begin": "(=)\\s*(?=[^'\"`])",
          "beginCaptures": {
            "1": {
              "name": "punctuation.separator.key-value.html"
            }
          },
          "end": "(?=(\\s|>|\\/>))",
          "patterns": [
            {
              "begin": "(?=[^'\"`])",
              "end": "(?=(\\s|>|\\/>))",
              "name": "source.ts.embedded.html",
              "patterns": [
                {
                  "include": "source.ts"
                }
              ]
            }
          ]
        }
      ]
    },
    "vue-directives-style-attr": {
			"begin": "\\b(style)\\s*(=)",
			"captures": {
				"1": {
					"name": "entity.other.attribute-name.html"
				},
				"2": {
					"name": "punctuation.separator.key-value.html"
				}
			},
			"end": "(?<='|\")",
			"name": "meta.attribute.style",
			"patterns": [
				{
					"comment": "Copy from source.css#rule-list-innards",
					"begin": "('|\")",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"end": "(\\1)",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "source.css.embedded.html",
					"patterns": [
						{
							"include": "source.css#comment-block"
						},
						{
							"include": "source.css#escapes"
						},
						{
							"include": "source.css#font-features"
						},
						{
							"match": "(?x) (?<![\\w-])\n--\n(?:[-a-zA-Z_]    | [^\\x00-\\x7F])     # First letter\n(?:[-a-zA-Z0-9_] | [^\\x00-\\x7F]      # Remainder of identifier\n  |\\\\(?:[0-9a-fA-F]{1,6}|.)\n)*",
							"name": "variable.css"
						},
						{
							"begin": "(?<![-a-zA-Z])(?=[-a-zA-Z])",
							"end": "$|(?![-a-zA-Z])",
							"name": "meta.property-name.css",
							"patterns": [
								{
									"include": "source.css#property-names"
								}
							]
						},
						{
							"comment": "Modify end to fix #199. TODO: handle ' character.",
							"begin": "(:)\\s*",
							"beginCaptures": {
								"1": {
									"name": "punctuation.separator.key-value.css"
								}
							},
							"end": "\\s*(;)|\\s*(?='|\")",
							"endCaptures": {
								"1": {
									"name": "punctuation.terminator.rule.css"
								}
							},
							"contentName": "meta.property-value.css",
							"patterns": [
								{
									"include": "source.css#comment-block"
								},
								{
									"include": "source.css#property-values"
								}
							]
						},
						{
							"match": ";",
							"name": "punctuation.terminator.rule.css"
						}
					]
				}
			]
		},
    "vue-directives-generic-attr": {
			"begin": "\\b(generic)\\s*(=)",
			"captures": {
				"1": {
					"name": "entity.other.attribute-name.html"
				},
				"2": {
					"name": "punctuation.separator.key-value.html"
				}
			},
			"end": "(?<='|\")",
			"name": "meta.attribute.generic",
			"patterns": [
				{
					"begin": "('|\")",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"end": "(\\1)",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "meta.type.parameters",
					"comment": "https://github.com/microsoft/vscode/blob/fd4346210f59135fad81a8b8c4cea7bf5a9ca6b4/extensions/typescript-basics/syntaxes/TypeScript.tmLanguage.json#L4002-L4020",
					"patterns": [
						{
							"include": "source.ts#comment"
						},
						{
							"name": "storage.modifier.ts",
							"match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(extends|in|out)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
						},
						{
							"include": "source.ts#type"
						},
						{
							"include": "source.ts#punctuation-comma"
						},
						{
							"name": "keyword.operator.assignment.ts",
							"match": "(=)(?!>)"
						}
					]
				}
			]
		},
    "self-closing-tag": {
			"begin": "(<)([a-zA-Z0-9:-]+)(?=([^>]+/>))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.$2.html"
				}
			},
			"end": "(/>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "self-closing-tag",
			"patterns": [
				{
          "include": "#vue-directives"
        },
        {
          "include": "text.html.basic#attribute"
        }
			]
		},
    "start-tag": {
			"begin": "(<)([a-zA-Z0-9:-]+)(\\s*)(?=(.*>))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.$2.html"
				}
			},
			"end": "(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "start-tag",
			"patterns": [
				{
          "include": "#vue-directives"
        },
        {
          "include": "text.html.basic#attribute"
        }
			]
		},
    "end-tag": {
			"begin": "(</)([a-zA-Z0-9:-]+)(?=>)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				},
				"2": {
					"name": "entity.name.tag.$2.html"
				}
			},
			"end": "(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "end-tag",
			"patterns": [
        {
          "include": "text.html.basic#attribute"
        }
			]
		},
    "vue-interpolations": {
			"patterns": [
				{
					"begin": "(\\{\\{)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.interpolation.begin.html"
						}
					},
					"end": "(\\}\\})",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.interpolation.end.html"
						}
					},
					"name": "expression.embedded",
					"patterns": [
						{
							"begin": "\\G",
							"end": "(?=\\}\\})",
							"name": "source.ts.embedded.html",
							"patterns": [
								{
									"include": "source.ts"
								}
							]
						}
					]
				}
			]
		},
    "vgTemplate": {
      "begin": "\\G\\s*([`|'|\"])",
      "beginCaptures": {
        "1": {
          "name": "string"
        }
      },
      "end": "\\1",
      "endCaptures": {
        "0": {
          "name": "string"
        }
      },
      "contentName": "text.html",
      "patterns": [
        {
          "include": "text.html.basic#comment"
        },
        {
          "include": "#self-closing-tag"
        },
        {
          "include": "#start-tag"
        },
        {
          "include": "#end-tag"
        },
        {
          "include": "#vue-interpolations"
        }
      ]
    }
  }
}
